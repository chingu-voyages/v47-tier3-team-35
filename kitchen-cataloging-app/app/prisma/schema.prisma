generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model
model User {
  //id is auto-generated by Mongo Db and is mapped to the property _id
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName String
  email String @unique
  clerkId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  foods Food[]
  rooms Room[]
  logs Log[]
}

model Room {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @db.ObjectId
  foods Food[]
  itemCount Int @default(0)
  createdAt DateTime @default(now())
}

// food items model. Stored as an array in User
model Food {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) //purchase date
  updatedAt DateTime @updatedAt 
  description String 
  price Float //limit to 2 decimal places
  amount Int
  category String //limit to available categories
  threshold Int?
  expirationDate DateTime?
  image String?
  labels String[]
  logs Log[] //stores log for each time user adds or subtracts this food
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
  room Room? @relation(fields: [roomId], references: [id])
  roomId String? @db.ObjectId
}

// Food log model -- created upon every purchase of food. Stored as an array in Food
model Log {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  price Float //limit to 2 decimal places
  amount Int
  totalCost Float //limit to 2 decimal places
  timestamp DateTime @default(now())
  food Food? @relation(fields: [foodId], references: [id])
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @db.ObjectId
  foodId String? @db.ObjectId
}